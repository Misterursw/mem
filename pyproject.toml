[project]
name = "langmem"
version = "0.0.30"
description = "Prebuilt utilities for memory management and retrieval."
readme = "README.md"
requires-python = ">=3.10"
license = { file = "LICENSE" }
dependencies = [
    "langchain>=0.3.15",
    "langchain-core>=0.3.46",
    "langchain-openai>=0.3.1",
    "trustcall>=0.0.39",
    "langgraph>=0.6.0,<2",
    "langchain-anthropic>=0.3.3",
    "langsmith>=0.3.8",
    "langgraph-checkpoint>=2.0.12",
    # 基础数值计算和图像处理
    "numpy>=1.24.0",
    "Pillow>=10.0.0",
    "orjson>=3.9.0",
]

[project.packages]
find = { where = ["src"] }

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[dependency-groups]
dev = [
    "anyio>=4.8.0",
    "langchain-anthropic>=0.3.3",
    "langchain-openai>=0.3.1",
    "langgraph-cli[inmem]>=0.1.70",
    "pytest>=8.3.4",
    "pytest-watch>=4.2.0",
    "pytest-xdist>=3.6.1",
    "langgraph-prebuilt>=0.1.1",
    "ruff>=0.12.12",
]
docs = [
    "markdown-callouts>=0.4.0",
    "markdown-include>=0.8.1",
    "mkdocs>=1.6.1",
    "mkdocs-autorefs>=1.3.0",
    "mkdocs-exclude>=1.0.2",
    "mkdocs-git-committers-plugin-2>=2.5.0",
    "mkdocs-material>=9.6.1",
    "mkdocs-minify-plugin>=0.8.0",
    "mkdocs-redirects>=1.2.2",
    "mkdocs-rss-plugin>=1.17.1",
    "mkdocstrings>=0.27.0",
    "mkdocstrings-python>=1.13.0",
    "nbformat>=5.10.4",
    "nbconvert>=7.16.6",
]
medical = [
    # 深度学习和图像处理
    "torch>=2.0.0",
    "torchvision>=0.15.0",
    "transformers>=4.30.0",
    # 医学图像格式支持
    "pydicom>=2.4.0",
    # 科学计算增强
    "scikit-learn>=1.3.0",
    "scipy>=1.11.0",
    # Gemini API支持
    "langchain-google-genai>=1.0.0",
]

[tool.uv.workspace]
members = ["evals/gen"]

[tool.ruff]
lint.select = ["E", "F", "I", "TID251"]
lint.ignore = ["E501"]
line-length = 88
indent-width = 4
extend-include = ["*.ipynb"]

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
skip-magic-trailing-comma = false
line-ending = "auto"
docstring-code-format = true
docstring-code-line-length = "dynamic"

[tool.ruff.lint.flake8-tidy-imports.banned-api]
"typing.TypedDict".msg = "Use typing_extensions.TypedDict instead."

[tool.hatch.build]
exclude = [
    "tests/",
    "docs/",
    ".github/",
    "examples.py",
    "examples/",
    ".editorconfig",
    "db/",
    "evals/",
    ".langgraph_api",
    "*.ipynb",
    ".python-version",
    ".editorconfig",
    ".venv*/**",
    "pytest.ini",
]
